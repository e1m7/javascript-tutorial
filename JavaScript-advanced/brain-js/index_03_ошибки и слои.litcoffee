
Нейронные сети на основе библиотеки Brain.js
============================================

Лекция 3: ошибки сети и слои модели
===================================

1) Любое обучение сети проходит через 4 этапа

  а) input trainig data (ввод тренировочных данных)
  б) choise random values (подбор случайных значений весов)
  в) activation relu (активирование функции реле, дает 0||1)
  г) trainig network (тренировка  сети), 100, 1000, 10000 итераций...

2) Мы создали модель, у которой 3 внутренних (скрытых) слоя
3) Как изменится ошибка и число итераций при изменении числа слоев?  

  1 слой: ошибка=0.169 итераций=20000
  2 слой: ошибка=0.005 итераций=4400
  3 слой: ошибка=0.005 итераций=4200      *наш выбор
  4 слой: ошибка=0.005 итераций=4900
  5 слой: ошибка=0.005 итераций=4300
  6 слой: ошибка=0.005 итераций=4200

  10  слой: ошибка=0.005 итераций=4500
  50  слой: ошибка=0.005 итераций=4500
  100 слой: ошибка=0.005 итераций=3200


    # index.js
    const net = new brain.NeuralNetwork({ hiddenLayers: [3] });
    const trainingData = [
        { input: [0, 0], output: [0] },
        { input: [0, 1], output: [1] },
        { input: [1, 0], output: [1] },
        { input: [1, 1], output: [0] }
    ];
    net.train(trainingData, {
        log: (error) => console.log(error),
        logPeriod: 100
    });
    const result = net.run([0, 0]);
    console.log(result);


Выводы
======

  1) чем больше слоев, тем дольше обучение сети и меньше ошибка
  2) разницы между 10 и 100 слоями при малом числе параметров нет


4) Слои могут отдавать данные не только 1 => 1, но и 1 => 2
5) Слои внутри могут чередоваться: вход => 3 => 5 => 3 => ответ
6) Комбинации слоев задаются через параметр hiddenLayers

    const net = new brain.NeuralNetwork({ hiddenLayers: [2, 2] });

  2х2 слой: ошибка=0.005 итераций=20000

http://highload.guide/blog/uploads/images_architecture-of-neural-networks/Image5.png